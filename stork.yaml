apiVersion: v1
kind: ServiceAccount
metadata:
  name: stork-account
  namespace: kube-system
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1alpha1
metadata:
   name: stork-role
rules:
- apiGroups: ["*"]
  resources: ["*"]
  verbs: ["*"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1alpha1
metadata:
  name: stork-role-binding
subjects:
- apiVersion: v1
  kind: ServiceAccount
  name: stork-account
  namespace: kube-system
- apiVersion: v1beta1
  kind: ServiceAccount
  name: stork-account
  namespace: kube-system
roleRef:
  kind: ClusterRole
  name: stork-role
  apiGroup: rbac.authorization.k8s.io
---
kind: Service
apiVersion: v1
metadata:
  name: stork-service
  namespace: kube-system
spec:
  selector:
    name: stork
  ports:
    - protocol: TCP
      port: 8099
      targetPort: 8099
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  annotations:
    scheduler.alpha.kubernetes.io/critical-pod: ""
  labels:
    component: scheduler
    tier: control-plane
  name: stork
  namespace: kube-system
spec:
  template:
    metadata:
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ""
      labels:
        name: stork
        tier: control-plane
    spec:
      hostname: stork
      containers:
      - command: ["/stork"]
        imagePullPolicy: Always
        args:
          ["--driver", "pxd", "--verbose"]
        image: disrani/stork
        resources:
          requests:
            cpu: '0.1'
        securityContext:
          privileged: false
        volumeMounts: []
        #ports:
        #- protocol: TCP
        #  containerPort: 8099
        #  port: 8099
        name: stork
      hostNetwork: true
      hostPID: false
      volumes: []
      serviceAccountName: stork-account
